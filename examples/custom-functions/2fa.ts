/**
 * Example of implementing 2FA/TOTP code generation functionality.
 * 
 * This shows how to generate TOTP codes for two-factor authentication.
 */

import { authenticator } from 'otplib';
import { Agent } from '../../src/agent';
import { Controller } from '../../src/controller';
import { ActionResult } from '../../src/agent/views';
import { ChatOpenAI } from '../../src/llm/providers/openai';

const controller = new Controller();

// Register 2FA code generation action
controller.action(
  'Get 2FA code from when OTP is required',
  async (): Promise<ActionResult> => {
    /**
     * Custom action to retrieve 2FA/MFA code from OTP secret key using otplib.
     * The OTP secret key should be set in the environment variable OTP_SECRET_KEY.
     */
    const secretKey = process.env.OTP_SECRET_KEY;
    if (!secretKey) {
      throw new Error('OTP_SECRET_KEY environment variable is not set');
    }

    const code = authenticator.generate(secretKey);
    return ActionResult.success(code);
  }
);

async function main() {
  // Example task using the 2FA action
  const task = `
    Steps:
    1. Go to https://authenticationtest.com/totpChallenge/ and try to log in.
    2. If prompted for 2FA code:
    2.1. Use the get_2fa_code action to retrieve the 2FA code.
    2.2. Submit the code provided by the get_2fa_code action.
    
    Considerations:
    - ALWAYS use the get_2fa_code action to retrieve the 2FA code if needed.
    - NEVER skip the 2FA step if the page requires it.
    - NEVER extract the code from the page.
    - NEVER use a code that is not generated by the get_2fa_code action.
    - NEVER hallucinate the 2FA code, always use the get_2fa_code action to get it.
    
    You are completely FORBIDDEN to use any other method to get the 2FA code.
  `;

  const model = new ChatOpenAI({
    model: 'gpt-4-turbo',
    apiKey: process.env.OPENAI_API_KEY!
  });
  
  const agent = new Agent({ 
    task, 
    llm: model, 
    controller 
  });

  const result = await agent.run();
  console.log(`Task completed with result: ${result}`);
}

if (require.main === module) {
  main().catch(console.error);
}